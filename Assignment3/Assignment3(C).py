import turtle

t = turtle.Turtle()


# level 에 관계 없이, 항상 가장 외곽선의 삼각형의 크기는 같아야 하므로 우선 가장 외곽선의 삼각형의 변을 인자의 length 로 설정했다.
# 외곽 삼각형의 변에서 1/2씩 감소하면서 삼각형의 세 꼭지점 방향으로 재귀적으로 함수가 실행되어야한다고 판단헀다.
# 즉, 재귀함수가 진행됨에 따라 변의 길이가 감소해야하기 때문에, 길이를 인자로 받는 함수가 필요하다고 생각해 fractal 함수를 선언했다.
def fractal(length, level):
    # 모든 삼각형은 밑에 있는 level = 1 일 때의 조건식의 내용에 의해 그려지게 될 것이다.
    # 그리고 각 level 의 삼각형들마다 달라지는 수치는 변들의 길이가 될 것이다.
    if level == 1:
        for i in range(3):  # 삼각형은 변을 세개 갖고 있으므로, 3회 반복되는 반복문이 필요하다.
            # 이는 어떤 level 의 삼각형이냐에 따라서 변의 길이가 달라지므로 변의 길이를 고정값이 아닌 라는 변수로 설정했다.
            t.forward(length)  # 삼각형의 변을 그리는 줄이다.
            t.left(120)  # 한 변을 그린 후, 120도를 회전해줘야 한다.

    # level 이 1보다 큰 경우, 재귀적으로 함수를 호출해 level 1 함수를 반복적으로 그려야 한다.
    # 따라서 level 이 1보다 큰 경우들을 처리하기 위한 조건식을 아래와 같이 구성했다.
    elif level > 1:
        for i in range(3):  # 삼각형의 꼭짓점마다 재귀적으로 함수가 호출되어야 하므로 3번 반복되는 반복분을 추가했다.
            # level 이 올라갈 수록, 바로 전 level 보다 1/2 작은 길이의 삼각형을그려야 하므로 아래와 같이 재귀함수를 사용했다.
            # 예를 들어 level 의 값이 5라면 순서대로 fractal(4),fractal(3),fractal(2),fractal(1)이 호출될 것이며
            # 각 fractal(4),fractal(3),fractal(2)에서도 순서대로 한 레벨아래의 fractal 함수를 연속적으로 호출하게 될 것이다.
            # 그렇게 해서 fractal(2) 는 1+3개의 삼각형을, fractal(3)은 3^2 + 3 + 1개의 삼각형을,
            # fractal(4)는 3^3 + 3^2 + 3 + 1개의 삼각형을 갖게될 것이다.
            # 그리고 인자의 길이 값이 length/2이므로 함수가 연속적으로 호출되면서 length/(2^n) 같은 형태로 계속 1/2씩 작아지게 될 것이다.
            fractal(length/2, level-1)
            # 한개의 삼각형을 그린 후, turtle 이 다음 삼각형을 그릴 위치까지 이동시켜줘야 한다.
            # 하지만 선을 그리지 않고 이동해야 하므로 penup 함수를 이용해 turtle 을 그리지 않는 상태로 만들었다.
            t.penup()
            # turtle 을 현재 삼각형의 길이의 2배만큼 이동시켜야 한다.
            # 여기서 한 level 후의 삼각형 변의 길이는 27번째 줄에서 length/2이므로 그의 2배인 length 만큼 이동시켰다.
            t.forward(length)
            t.left(120)  # turtle 다음 삼각형을 그리기 위한 방향을 보게하기 위하여 120도 왼쪽으로 회전시켰다.
            t.pendown()  # 이제 삼각형을 그려야 하므로 pendown 함수를 이용해 다시 turtle 이 선을 긋게 했다.


def draw_triangle(level):  # 인자로 level 만을 갖고있는 함수이다.
    fractal(350, level)  # 인자의 level 을 그대로 인자로 가져다 쓰고, 외곽의 삼각형의 길이를 350으로 정의해 총 두개의 인자를 입력했다.
    turtle.done()  # turtle 창을 꺼지지않고 유지시키는 줄이다.


draw_triangle(level=5)


